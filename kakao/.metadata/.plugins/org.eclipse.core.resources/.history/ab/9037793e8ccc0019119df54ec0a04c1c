package com.kakaopay.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.configurationprocessor.json.JSONObject;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.kakaopay.model.NoDealCustomerModel;
import com.kakaopay.model.RankYearBrAmtModel;
import com.kakaopay.model.RankYearSumAmtModel;
import com.kakaopay.service.AnctDataInfoService;

@RestController
public class AnctDataInfoController {
	
	@RequestMapping(value="/", method = RequestMethod.GET)	// URL 주소 = root
	public String login() {
		return "접속완료";
	}
	
	@RequestMapping(value="/test/{year}", method = RequestMethod.GET)
	public String test(@PathVariable String year) {
		// http://localhost:9000/test?{"list":[{"거래일자":"2019"},{"거래일자":"2018"}]}
		return year;
	}
	
	/*
	 * 연도별 합계 금액이 가장 많은 고객을 추출
	 * @param contractDetailVO
	 */
	
	@Autowired
	AnctDataInfoService anctDataInfoService;
	
	@RequestMapping(value="/rankYearSumAmt/{year}", method = RequestMethod.GET)
	public List<RankYearSumAmtModel> srchRankYearSumAmt(@PathVariable String year) throws Exception {
		// http://localhost:9000/rankYearSumAmt/'2018','2019'
		return anctDataInfoService.selectRankYearSumAmt(year);	// 연도별 max 합계 금액 조회
	}
	
	@RequestMapping(value="/noDealCustomer/{year}", method = RequestMethod.GET)
	public List<NoDealCustomerModel> srchNodealCustomer(@PathVariable String year) throws Exception {
		// http://localhost:9000/noDealCustomer/'2018','2019'
		return anctDataInfoService.selectNoDealCustomer(year);	// 거래가 없는 고객 조회
	}
	
	@GetMapping(value="/rankYearBrAmt/{year}")
	public String srchRankYearBrAmt(@PathVariable List<String> year) throws Exception {
		// http://localhost:9000/rankYearBrAmt/2019 (성공)
		// http://localhost:9000/rankYearBrAmt/2019, 2018 (json list 형태로 받아지지 않음)
		return anctDataInfoService.selectRankYearBrAmt(year);	// 연도별 관리점별 거래금액 합계 구하여 큰 순서로 출력
		
	}

}
